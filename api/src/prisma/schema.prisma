generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  phone      String
  email      String   @unique
  activated  Boolean  @default(false)
  role_id    Int
  roles      roles    @relation(fields: [role_id], references: [id])
  created_at DateTime @default(now())

  payments payments[]
  cabinet  cabinets[]
  tokens   tokens[]
}

model plans {
  id       Int        @id @default(autoincrement())
  title    String     @unique
  scopes   Json // возможности
  price    Int // цены
  payments payments[]
}

model roles {
  id    Int     @id @default(autoincrement())
  title String  @unique
  users users[]
}

model payments {
  id         Int      @id @default(autoincrement())
  plan_id    Int
  user_id    Int
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  plan       plans    @relation(fields: [plan_id], references: [id], onDelete: NoAction)
  created_at DateTime @default(now())
  end_date   DateTime
}

model cabinets {
  id          Int      @id @default(autoincrement())
  user_id     Int
  user        users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  title       String   @unique
  description String
  created_at  DateTime @default(now())
}

model messages {
  id            Int             @id @default(autoincrement())
  content       String
  sender_id     Int
  receiver_id   Int
  has_files     Boolean         @default(false)
  timestamp     DateTime        @default(now())
  messagesFiles messagesFiles[]
}

model messagesFiles {
  id          Int      @id @default(autoincrement())
  messages_id Int
  message     messages @relation(fields: [messages_id], references: [id])
  filename    String
  filepath    String
}

model statuses {
  id    Int    @id @default(autoincrement())
  title String
}

model tokens {
  id          Int       @id @default(autoincrement())
  user_id     Int
  token       String
  type        String
  number_code Int?
  is_valid    Boolean   @default(true)
  created_at  DateTime  @default(now())
  expires_at  DateTime?
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
