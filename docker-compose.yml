version: '3.8'
services:
  maindb:
    image: postgres:alpine3.18
    volumes:
      - ./database:/var/lib/postgresql/data
    container_name: maindb
    environment:
      - POSTGRES_USER=${DEV_PG_DB_USER}
      - POSTGRES_PASSWORD=${DEV_PG_DB_PASS}
      - POSTGRES_DB=${DEV_PG_DATABASE}
    ports:
      - '${DEV_PG_DB_PORT}:5432'
    expose:
      - ${DEV_PG_DB_PORT}
    healthcheck:
      test:
        [ 'CMD-SHELL', 'pg_isready -U ${DEV_PG_DB_USER} -d ${DEV_PG_DATABASE}' ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - '${API_PORT}:${API_PORT}'
    environment:
      - DATABASE_URL=postgresql://${DEV_PG_DB_USER}:${DEV_PG_DB_PASS}@maindb:${DEV_PG_DB_PORT}/${DEV_PG_DATABASE}
      - RABBITMQ_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${API_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    command: >
      sh -c "
      yarn install &&
      npx prisma generate &&
      yarn start:prod
      "
    depends_on:
      - maindb
    env_file:
      - .env

  nginx:
    image: macbre/nginx-brotli:1.19.6-http3
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - 80:80
      - 443:443
    container_name: nginx
    expose:
      - 443
      - 80
    environment:
      NGINX_COMPRESS: 'brotli'
    restart: always
    depends_on:
      - api

  rabbitmq:
    image: rabbitmq:3.9-management
    hostname: rabbitmq
    restart: always
    container_name: rabbitmq
    ports:
      - '9802:15672'
      - '5672:5672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: [ 'CMD', 'rabbitmqctl', 'status' ]
      interval: 10s
      timeout: 5s
      retries: 3

  client:
    container_name: client
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    restart: always
    depends_on:
      - api