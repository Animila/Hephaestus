proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;


upstream api_upstream {
    server api:5000;
}
upstream client_upstream {
    server client:3000;
}
server {
    if ($host = www.animila.ru) {
        return 301 https://$host$request_uri;
    }
    if ($host = animila.ru) {
        return 301 https://$host$request_uri;
    }
    listen 80;
    server_name animila.ru www.animila.ru;
    return 404; # managed by Certbot
    http2_max_field_size 16k;
}

server {
    listen 443 ssl http2;

    client_max_body_size 64M;
    server_name animila.ru www.animila.ru;
    http2_max_field_size 16k;

    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/animila.ru.key;

    server_tokens off;

    brotli on;
    brotli_comp_level 6;
    brotli_buffers 16 8k;
    brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/javascript application/rss+xml application/atom+xml font/ttf font/opentype application/vnd.ms-fontobject image/svg+xml;


    proxy_http_version 1.1;
    proxy_max_temp_file_size 0;
    proxy_read_timeout      3600;
    proxy_connect_timeout   300;
    proxy_redirect          off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    if ($host ~* www\.(.*)) {
        set $host_without_www $1;
        rewrite ^(.*)$ http://$host_without_www$1 permanent;
    }
    if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
#         return 403;
    }
    if ($http_user_agent ~* msnbot|scrapbot) {
#         return 403;
    }
    if ( $http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen) ) {
        return 403;
    }

    location /_next {
        proxy_cache STATIC;
        proxy_pass http://client_upstream;
        add_header X-Frame-Options SAMEORIGIN;

        # For testing cache - remove before deploying to production
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }

    location /static {
        proxy_cache STATIC;
        proxy_ignore_headers Cache-Control;
        proxy_cache_valid 60m;
        proxy_pass http://client_upstream;
        add_header X-Frame-Options SAMEORIGIN;
        # For testing cache - remove before deploying to production
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }

    location / {
            proxy_pass http://client_upstream;
            proxy_set_header X-Forwarded-Proto http;
            proxy_set_header X-Url-Scheme $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            add_header X-Frame-Options SAMEORIGIN;
            proxy_connect_timeout 60;
            proxy_read_timeout 900s;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
        }


    location /api {
        proxy_pass http://api_upstream;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        add_header X-Frame-Options SAMEORIGIN;
        proxy_connect_timeout 60;
        proxy_read_timeout 900s;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }

}